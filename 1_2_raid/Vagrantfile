# -*- mode: ruby -*-
# vi: set ft=ruby :

$script = <<-SCRIPT
sudo -i
yum -y install mdadm gdisk

mdadm --zero-superblock --force /dev/sd[b-g]
wipefs --all --force /dev/sd[b-g]

sgdisk -n=1::+4G --typecode=8300 --change-name=1:"sdb1_4G" /dev/sdb
sgdisk -n=2::+20M --typecode=8300 --change-name=2:"sdb2_20M" /dev/sdb
sgdisk -n=3::+30M --typecode=8300 --change-name=3:"sdb3_30M" /dev/sdb
sgdisk -n=4::+40M --typecode=8300 --change-name=4:"sdb4_40M" /dev/sdb
sgdisk -n=5::+50M --typecode=8300 --change-name=5:"sdb5_50M" /dev/sdb

sgdisk -n=1::+4G --typecode=8300 --change-name=1:"sdb1_4G" /dev/sdc
sgdisk -n=2::+20M --typecode=8300 --change-name=2:"sdb2_20M" /dev/sdc
sgdisk -n=3::+30M --typecode=8300 --change-name=3:"sdb3_30M" /dev/sdc
sgdisk -n=4::+40M --typecode=8300 --change-name=4:"sdb4_40M" /dev/sdc
sgdisk -n=5::+50M --typecode=8300 --change-name=5:"sdb5_50M" /dev/sdc

sgdisk -n=1::+4G --typecode=8300 --change-name=1:"sdb1_4G" /dev/sdd
sgdisk -n=2::+20M --typecode=8300 --change-name=2:"sdb2_20M" /dev/sdd
sgdisk -n=3::+30M --typecode=8300 --change-name=3:"sdb3_30M" /dev/sdd
sgdisk -n=4::+40M --typecode=8300 --change-name=4:"sdb4_40M" /dev/sdd
sgdisk -n=5::+50M --typecode=8300 --change-name=5:"sdb5_50M" /dev/sdd

sgdisk -n=1::+4G --typecode=8300 --change-name=1:"sdb1_4G" /dev/sde
sgdisk -n=2::+20M --typecode=8300 --change-name=2:"sdb2_20M" /dev/sde
sgdisk -n=3::+30M --typecode=8300 --change-name=3:"sdb3_30M" /dev/sde
sgdisk -n=4::+40M --typecode=8300 --change-name=4:"sdb4_40M" /dev/sde
sgdisk -n=5::+50M --typecode=8300 --change-name=5:"sdb5_50M" /dev/sde

sgdisk -n=1::+4G --typecode=8300 --change-name=1:"sdb1_4G" /dev/sdf
sgdisk -n=2::+20M --typecode=8300 --change-name=2:"sdb2_20M" /dev/sdf
sgdisk -n=3::+30M --typecode=8300 --change-name=3:"sdb3_30M" /dev/sdf
sgdisk -n=4::+40M --typecode=8300 --change-name=4:"sdb4_40M" /dev/sdf
sgdisk -n=5::+50M --typecode=8300 --change-name=5:"sdb5_50M" /dev/sdf

sgdisk -n=1::+4G --typecode=8300 --change-name=1:"sdb1_4G" /dev/sdg
sgdisk -n=2::+20M --typecode=8300 --change-name=2:"sdb2_20M" /dev/sdg
sgdisk -n=3::+30M --typecode=8300 --change-name=3:"sdb3_30M" /dev/sdg
sgdisk -n=4::+40M --typecode=8300 --change-name=4:"sdb4_40M" /dev/sdg
sgdisk -n=5::+50M --typecode=8300 --change-name=5:"sdb5_50M" /dev/sdg

mdadm --create /dev/md/raid_1 --level=10 --raid-devices=6 /dev/sd[b-g]1
mdadm --create /dev/md/raid_2 --level=5 --raid-devices=6 /dev/sd[b-g]2
mdadm --create /dev/md/raid_3 --level=6 --raid-devices=6 /dev/sd[b-g]3
mdadm --create /dev/md/raid_4 --level=0 --raid-devices=6 /dev/sd[b-g]4
mdadm --create /dev/md/raid_5 --level=1 --metadata=0.9 --raid-devices=6 /dev/sd[b-g]5
mdadm /dev/md/raid_1 --add /dev/nvme0n5

mkfs.ext4 /dev/md/raid_1 && mkfs.ext4 /dev/md/raid_2 \
&& mkfs.ext4 /dev/md/raid_3 && mkfs.ext4 /dev/md/raid_4 && mkfs.ext4 /dev/md/raid_5

mkdir /etc/mdadm/
echo "DEVICE partitions" > /etc/mdadm/mdadm.conf
mdadm --detail --scan --verbose | awk '/ARRAY/ {print}' >> /etc/mdadm/mdadm.conf

mkdir /tmp/raid_1 /tmp/raid_2 /tmp/raid_3 /tmp/raid_4 /tmp/raid_5
mount /dev/md/raid_1 /tmp/raid_1/
mount /dev/md/raid_2 /tmp/raid_2/
mount /dev/md/raid_3 /tmp/raid_3/
mount /dev/md/raid_4 /tmp/raid_4/
mount /dev/md/raid_5 /tmp/raid_5/

lsblk
df -h

ping 8.8.8.8 -c 1

SCRIPT

###
require 'open3'
require 'fileutils'

def get_vm_name(id)
  out, err = Open3.capture2e('VBoxManage list vms')
  raise out unless err.exitstatus.zero?

  path = path = File.dirname(__FILE__).split('/').last
  name = out.split(/\n/)
            .select { |x| x.start_with? "\"#{path}_#{id}" }
            .map { |x| x.tr('"', '') }
            .map { |x| x.split(' ')[0].strip }
            .first

  name
end


def controller_exists(name, controller_name)
  return false if name.nil?

  out, err = Open3.capture2e("VBoxManage showvminfo #{name}")
  raise out unless err.exitstatus.zero?

  out.split(/\n/)
     .select { |x| x.start_with? 'Storage Controller Name' }
     .map { |x| x.split(':')[1].strip }
     .any? { |x| x == controller_name }
end


# add NVME disks
def create_nvme_disks(vbox, name)
  unless controller_exists(name, 'NVME Controller')
    vbox.customize ['storagectl', :id,
                    '--name', 'NVME Controller',
                    '--add', 'pcie']
  end

  dir = "../vdisks"
  FileUtils.mkdir_p dir unless File.directory?(dir)

  disks = (0..4).map { |x| ["nvmedisk#{x}_", '5120'] }

  disks.each_with_index do |(name, size), i|
    file_to_disk = "#{dir}/#{name}.vdi"
    port = (i ).to_s

    unless File.exist?(file_to_disk)
      vbox.customize ['createmedium',
                      'disk',
                      '--filename',
                      file_to_disk,
                      '--size',
                      size,
                      '--format',
                      'VDI',
                      '--variant',
                      'standard']
    end

    vbox.customize ['storageattach', :id,
                    '--storagectl', 'NVME Controller',
                    '--port', port,
                    '--type', 'hdd',
                    '--medium', file_to_disk,
                    '--device', '0']

  end
end

# add SATA disks
def create_disks(vbox, name)
  unless controller_exists(name, 'SATA Controller')
    vbox.customize ['storagectl', :id,
                    '--name', 'SATA Controller',
                    '--add', 'sata']
  end

  dir = "../vdisks"
  FileUtils.mkdir_p dir unless File.directory?(dir)

  disks = (1..6).map { |x| ["disk#{x}_", '5120'] }

  disks.each_with_index do |(name, size), i|
    file_to_disk = "#{dir}/#{name}.vdi"
    port = (i + 1).to_s

    unless File.exist?(file_to_disk)
      vbox.customize ['createmedium',
                      'disk',
                      '--filename',
                      file_to_disk,
                      '--size',
                      size,
                      '--format',
                      'VDI',
                      '--variant',
                      'standard']
    end

    vbox.customize ['storageattach', :id,
                    '--storagectl', 'SATA Controller',
                    '--port', port,
                    '--type', 'hdd',
                    '--medium', file_to_disk,
                    '--device', '0']

    vbox.customize ['setextradata', :id,
                    "VBoxInternal/Devices/ahci/0/Config/Port#{port}/SerialNumber",
                    name.ljust(20, '0')]
  end
end

Vagrant.configure("2") do |config|

config.vm.define "server" do |server|
  config.vm.box = 'centos/8'
  config.vm.box_version = "2011.0"
  server.vm.host_name = 'server'
  server.vm.network :private_network, ip: "10.0.0.41"
  server.vm.provision "shell", inline: $script
  server.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
    vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

  server.vm.provider 'virtualbox' do |vbx|
      name = get_vm_name('server')
      create_disks(vbx, name)
      create_nvme_disks(vbx, name)
  end

end

end
