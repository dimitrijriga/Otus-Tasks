# -*- mode: ruby -*-
# vim: set ft=ruby :

MACHINES = {
  :inetRouter => {
        :box_name => "centos/7",
        :vm_name => "inetRouter",
        :net => [
                  {ip: '192.168.255.1', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                  {ip: '192.168.56.10', adapter: 8},
                ]
  },
  :centralRouter => {
        :box_name => "centos/7",
        :vm_name => "centralRouter",
        :net => [
                  {ip: '192.168.255.2', adapter: 2, netmask: "255.255.255.252", virtualbox__intnet: "router-net"},
                  {ip: '192.168.0.1', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                  {ip: '192.168.56.11', adapter: 8},
                ]
  },
  :centralServer => {
        :box_name => "centos/7",
        :vm_name => "centralServer",
        :net => [
                  {ip: '192.168.0.2', adapter: 3, netmask: "255.255.255.240", virtualbox__intnet: "dir-net"},
                  {ip: '192.168.56.12', adapter: 8},
                ]
  },
}
##############################################################################################################

Vagrant.configure("2") do |config|
  MACHINES.each do |boxname, boxconfig|
    config.vm.define boxname do |box|
      box.vm.box = boxconfig[:box_name]
      box.vm.host_name = boxname.to_s

      if boxconfig[:vm_name] == "office2Server"
       box.vm.provision "ansible" do |ansible|
         ansible.playbook = "ansible/provision.yml"
         ansible.inventory_path = "inventory/hosts"
         ansible.host_key_checking = "false"
         ansible.limit = "all"
       end
      end

      boxconfig[:net].each do |ipconf|
      box.vm.network "private_network", ipconf
    end
    if boxconfig.key?(:public)
      box.vm.network "public_network", boxconfig[:public]
    end
    box.vm.provision "shell", inline: <<-SHELL
      mkdir -p ~root/.ssh
      cp ~vagrant/.ssh/auth* ~root/.ssh
    SHELL
      case boxname.to_s
      when "inetRouter"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          sysctl net.ipv4.conf.all.forwarding=1
          iptables -t nat -A POSTROUTING ! -d 192.168.0.0/16 -o eth0 -j MASQUERADE
       SHELL
      when "centralRouter"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          sysctl net.ipv4.conf.all.forwarding=1
          echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
          echo "GATEWAY=192.168.255.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
          systemctl restart network
        SHELL
      when "centralServer"
        box.vm.provision "shell", run: "always", inline: <<-SHELL
          echo "DEFROUTE=no" >> /etc/sysconfig/network-scripts/ifcfg-eth0
          echo "GATEWAY=192.168.0.1" >> /etc/sysconfig/network-scripts/ifcfg-eth1
          systemctl restart network
        SHELL
      end
    end
  end
end
